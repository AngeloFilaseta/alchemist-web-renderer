[versions]
alchemist = "24.1.10"
kotest = "5.4.2"
kotlin = "1.7.20"
kotlin-wrappers = "1.0.0-pre.354"
ktor = "2.0.3"
logback = "1.2.11"
react = "18.2.0-pre.392"
redux = "0.5.5"
serialization = "1.3.3"

[libraries]
alchemist-api = { module = "it.unibo.alchemist:alchemist-api", version.ref = "alchemist" }
alchemist = { module = "it.unibo.alchemist:alchemist", version.ref = "alchemist" }
alchemist-incarnation-sapere = { module = "it.unibo.alchemist:alchemist-incarnation-sapere", version.ref = "alchemist" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-assertions-core-jvm = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-runner-junit5-jvm = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-stdlib-reflect", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-react = {module = "org.jetbrains.kotlin-wrappers:kotlin-react", version.ref = "react" }
kotlin-react-dom = {module = "org.jetbrains.kotlin-wrappers:kotlin-react-dom", version.ref = "react" }
kotlin-test-common = { module = "org.jetbrains.kotlin:kotlin-test-common", version.ref = "kotlin" }
kotlin-test-annotations-common = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
kotlin-wrappers-bom = {module = "org.jetbrains.kotlin-wrappers:kotlin-wrappers-bom", version.ref = "kotlin-wrappers" }
kotlinx-serialization-json = {module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
ktor-client-core = {module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-js = {module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-content-negotiation = {module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = {module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-serialization-kotlinx-json = {module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-compression = {module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-content-negotiation = {module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-cors = {module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-core-jvm = {module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = {module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-test-host = {module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
logback-classic = {module = "ch.qos.logback:logback-classic", version.ref = "logback" }
redux-kotlin-threadsafe = {module = "org.reduxkotlin:redux-kotlin-threadsafe", version.ref = "redux" }

[bundles]
alchemist = [
    "alchemist-api",
    "alchemist",
    "alchemist-incarnation-sapere"
]
kotlin-react = [
    "kotlin-react",
    "kotlin-react-dom"
]
kotlin-testing-common = [
    "kotest-assertions-core",
    "kotest-framework-engine",
    "kotest-framework-datatest",
    "kotlin-test-common",
    "kotlin-test-annotations-common",
]
kotlin-testing-jvm = [
    "kotest-assertions-core-jvm",
    "kotest-runner-junit5-jvm"
]
ktor-client = [
    "ktor-client-js",
    "ktor-client-content-negotiation",
    "ktor-serialization-kotlinx-json",
]
ktor-server = [
    "ktor-serialization",
    "ktor-serialization-kotlinx-json",
    "ktor-server-compression",
    "ktor-server-content-negotiation",
    "ktor-server-cors",
    "ktor-server-core-jvm",
    "ktor-server-netty"
]
[plugins]
dokka = "org.jetbrains.dokka:1.7.10"
gitSemVer = { id = "org.danilopianini.git-sensitive-semantic-versioning", version = "0.3.0" }
kotest-multiplatform = { id = "io.kotest.multiplatform", version.ref = "kotest" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-qa = "org.danilopianini.gradle-kotlin-qa:0.25.0"
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
taskTree = "com.dorongold.task-tree:2.1.0"
